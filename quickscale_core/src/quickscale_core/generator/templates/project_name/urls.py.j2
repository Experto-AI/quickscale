"""
URL configuration for {{ project_name }} project.

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/stable/topics/http/urls/

Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""

from django.conf import settings
from django.conf.urls.static import static
from django.contrib import admin
from django.http import HttpResponse
from django.urls import include, path
from django.views.generic import TemplateView

from {{ project_name }}.views import custom_404_view


def healthcheck(request):
    """Simple healthcheck endpoint for Railway and other monitoring services.

    Returns HTTP 200 OK without requiring database access or HTTPS redirect.
    This endpoint is exempt from SECURE_SSL_REDIRECT in production settings.
    """
    return HttpResponse("OK", content_type="text/plain", status=200)


urlpatterns = [
    path("healthcheck/", healthcheck, name="healthcheck"),
    path("admin/", admin.site.urls),
    path("", TemplateView.as_view(template_name="index.html"), name="home"),
]

# Custom error handlers with helpful module installation hints
handler404 = "{{ project_name }}.views.custom_404_view"
handler500 = "{{ project_name }}.views.custom_500_view"

# Serve media files in development
if settings.DEBUG:
    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

    # Django Debug Toolbar (if installed)
    try:
        import debug_toolbar

        urlpatterns = [
            path("__debug__/", include(debug_toolbar.urls)),
        ] + urlpatterns
    except ImportError:
        pass

    # In DEBUG mode, show custom 404 page instead of Django's technical 404
    # This provides helpful hints about installing QuickScale modules
    from django.urls import re_path

    urlpatterns += [
        # Catch module-specific URLs first (more specific patterns)
        re_path(r"^accounts/.*", custom_404_view),
        re_path(r"^billing/.*", custom_404_view),
        re_path(r"^teams/.*", custom_404_view),
        # Catch-all for any other 404s (must be last)
        re_path(r".*", custom_404_view),
    ]
